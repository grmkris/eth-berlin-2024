/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CompliantERC20,
  CompliantERC20Interface,
} from "../../../contracts/identity/CompliantERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_identityAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rulesAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "publicKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encryptedAmount",
        type: "bytes",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "publicKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfMe",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "getIdentifier",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identifiers",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "mintedAmount",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encryptedAmount",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encryptedAmount",
        type: "bytes",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234801562000011575f80fd5b50604051620026a1380380620026a18339810160408190526200003491620003a2565b8181336040518060400160405280601381526020017f417574686f72697a6174696f6e20746f6b656e00000000000000000000000000815250604051806040016040528060018152602001603160f81b8152506200009c5f83620001d760201b90919060201c565b61012052620000ad816001620001d7565b61014052815160208084019190912060e052815190820120610100524660a0526200013a60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b0381166200017257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6200017d816200020f565b5060046200018c8382620004b7565b5060056200019b8282620004b7565b5050600880546001600160a01b039687166001600160a01b031991821617909155600980549590961694169390931790935550620005db915050565b5f602083511015620001f657620001ee836200022d565b905062000209565b81620002038482620004b7565b5060ff90505b92915050565b600380546001600160a01b03191690556200022a816200026f565b50565b5f80829050601f815111156200025a578260405163305a27a960e01b815260040162000169919062000583565b80516200026782620005b7565b179392505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b0381168114620002d7575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5b838110156200030c578181015183820152602001620002f2565b50505f910152565b5f82601f83011262000324575f80fd5b81516001600160401b0380821115620003415762000341620002dc565b604051601f8301601f19908116603f011681019082821181831017156200036c576200036c620002dc565b8160405283815286602085880101111562000385575f80fd5b62000398846020830160208901620002f0565b9695505050505050565b5f805f8060808587031215620003b6575f80fd5b620003c185620002c0565b9350620003d160208601620002c0565b60408601519093506001600160401b0380821115620003ee575f80fd5b620003fc8883890162000314565b9350606087015191508082111562000412575f80fd5b50620004218782880162000314565b91505092959194509250565b600181811c908216806200044257607f821691505b6020821081036200046157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620004b257805f5260205f20601f840160051c810160208510156200048e5750805b601f840160051c820191505b81811015620004af575f81556001016200049a565b50505b505050565b81516001600160401b03811115620004d357620004d3620002dc565b620004eb81620004e484546200042d565b8462000467565b602080601f83116001811462000521575f8415620005095750858301515b5f19600386901b1c1916600185901b1785556200057b565b5f85815260208120601f198616915b82811015620005515788860151825594840194600190910190840162000530565b50858210156200056f57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b602081525f8251806020840152620005a3816040850160208701620002f0565b601f01601f19169190910160400192915050565b8051602080830151919081101562000461575f1960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516120746200062d5f395f61117601525f61114a01525f61133801525f61131001525f61126b01525f61129501525f6112bf01526120745ff3fe608060405234801561000f575f80fd5b5060043610610179575f3560e01c8063715018a6116100d257806395cf57b011610088578063e30c397811610063578063e30c397814610325578063f2fde38b14610336578063fb9d09c814610349575f80fd5b806395cf57b0146102f757806395d89b411461030a578063a9059cbb14610312575f80fd5b806384b0196e116100b857806384b0196e146102a25780638da5cb5b146102bd578063913f6ad5146102e2575f80fd5b8063715018a61461029057806379ba50971461029a575f80fd5b806323b872dd1161013257806332cbfb071161010d57806332cbfb0714610257578063499726631461026a5780636934c7471461027d575f80fd5b806323b872dd14610218578063297235111461022b578063313ce5671461023e575f80fd5b8063095ea7b311610162578063095ea7b3146101ba5780630eb2b9c9146101cd57806318160ddd146101eb575f80fd5b8063014647f41461017d57806306fdde03146101a5575b5f80fd5b61019061018b366004611a4d565b61035c565b60405190151581526020015b60405180910390f35b6101ad6103ac565b60405161019c9190611ae9565b6101906101c8366004611afb565b61043c565b335f908152600660205260409020545b60405190815260200161019c565b600354600160a01b900467ffffffffffffffff1660405167ffffffffffffffff909116815260200161019c565b610190610226366004611b23565b610499565b610190610239366004611a4d565b6104c1565b6102455f81565b60405160ff909116815260200161019c565b6101ad610265366004611b5c565b610504565b610190610278366004611bc6565b61066b565b6101ad61028b366004611c23565b6106af565b6102986109fc565b005b610298610a0f565b6102aa610a53565b60405161019c9796959493929190611c61565b6002546001600160a01b03165b6040516001600160a01b03909116815260200161019c565b6102ea610a95565b60405161019c9190611cf8565b6101dd610305366004611a4d565b610b08565b6101ad610c05565b610190610320366004611afb565b610c14565b6003546001600160a01b03166102ca565b610298610344366004611d5a565b610c48565b610298610357366004611d88565b610cc6565b5f61039f846101c885858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ddb92505050565b50600190505b9392505050565b6060600480546103bb90611da3565b80601f01602080910402602001604051908101604052809291908181526020018280546103e790611da3565b80156104325780601f1061040957610100808354040283529160200191610432565b820191905f5260205f20905b81548152906001019060200180831161041557829003601f168201915b5050505050905090565b335f8181526007602090815260408083206001600160a01b03871680855292528083208590555191929182907ff37f546c25e850257cc0c94f92bec94a17e2f0e884ddda268a25d8144b70eb6a908590a360019150505b92915050565b5f33816104a7868386610de7565b90506104b586868684610e85565b50600195945050505050565b5f61039f8461032085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ddb92505050565b60608383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250604080517f051d137ae0e1fae6e3b6559fed4442b35a85a9a39789838ad5c9ea05e7da2dce6020820152908101879052909350610591925060600190505b60405160208183030381529060405280519060200120610fb4565b90505f61059e8284610fe0565b90506001600160a01b03811633146106235760405162461bcd60e51b815260206004820152603160248201527f454950373132207369676e657220616e64207472616e73616374696f6e20736960448201527f676e657220646f206e6f74206d6174636800000000000000000000000000000060648201526084015b60405180910390fd5b6001600160a01b038a1633148061064257506001600160a01b03891633145b61064a575f80fd5b61065d6106578b8b611008565b8961106f565b9a9950505050505050505050565b5f6104b5858561022686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ddb92505050565b60608383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250604080517f051d137ae0e1fae6e3b6559fed4442b35a85a9a39789838ad5c9ea05e7da2dce602082015290810187905290935061072592506060019050610576565b90505f6107328284610fe0565b90506001600160a01b03811633146107b25760405162461bcd60e51b815260206004820152603160248201527f454950373132207369676e657220616e64207472616e73616374696f6e20736960448201527f676e657220646f206e6f74206d61746368000000000000000000000000000000606482015260840161061a565b336001600160a01b038a16036107e357335f908152600660205260408120546107dc918a9061107b565b94506109f0565b600954604051635406e7f760e11b81523360048201525f916001600160a01b03169063a80dcfee90602401602060405180830381865afa158015610829573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084d9190611ddb565b90505f8167ffffffffffffffff16116108ce5760405162461bcd60e51b815260206004820152602960248201527f596f75277265206e6f742072656769737465726564206173206120636f756e7460448201527f72792077616c6c65740000000000000000000000000000000000000000000000606482015260840161061a565b6008546040805163095cf57b60e41b81526001600160a01b038d811660048301526024820192909252600760448201527f636f756e7472790000000000000000000000000000000000000000000000000060648201525f9291909116906395cf57b090608401602060405180830381865afa15801561094f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109739190611df6565b90505f61098082846110b0565b6001600160a01b038d165f90815260066020526040812054919250906109ae576109a95f6110d8565b6109c7565b6001600160a01b038d165f908152600660205260409020545b90506109dc82826109d75f6110d8565b6110e4565b90506109e9818d5f61107b565b9850505050505b50505050949350505050565b610a046110f0565b610a0d5f61111d565b565b60035433906001600160a01b03168114610a475760405163118cdaa760e01b81526001600160a01b038216600482015260240161061a565b610a508161111d565b50565b5f6060805f805f6060610a64611143565b610a6c61116f565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6009546040805163148ee15160e31b815290516060926001600160a01b03169163a4770a88916004808301925f9291908290030181865afa158015610adc573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b039190810190611e9f565b905090565b6009545f906001600160a01b03163314610b8a5760405162461bcd60e51b815260206004820152602b60248201527f416363657373207265737472696374656420746f207468652063757272656e7460448201527f20455243323052756c6573000000000000000000000000000000000000000000606482015260840161061a565b60085460405163095cf57b60e41b81526001600160a01b03909116906395cf57b090610bbe90879087908790600401611f6e565b602060405180830381865afa158015610bd9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bfd9190611df6565b949350505050565b6060600580546103bb90611da3565b335f908152600660205260408120548190610c3090849061119c565b9050610c3e33858584610e85565b5060019392505050565b610c506110f0565b600380546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610c8e6002546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610cce6110f0565b610d0c60065f610ce66002546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f2054826111ca565b60065f610d216002546001600160a01b031690565b6001600160a01b0316815260208101919091526040015f2055600354610d59908290600160a01b900467ffffffffffffffff16611fac565b600380547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff93841602179055600254604080519284168352516001600160a01b03909116917f9109de113672aaca72ede8bc906f7aafabee865311ac020fb15c71edf94a0a01919081900360200190a250565b5f6104938260056111f2565b5f80610df38585611008565b90505f610e00848361119c565b6001600160a01b0387165f9081526006602052604081205491925090610e2790869061119c565b90505f610e34828461123e565b9050610e7a8888610e4f84610e49898c611249565b896110e4565b6001600160a01b039283165f9081526007602090815260408083209490951682529290925291902055565b979650505050505050565b5f610e9482846109d75f6110d8565b6009546040516317d5759960e31b81526001600160a01b03888116600483015287811660248301526044820184905292935091169063beabacc890606401602060405180830381865afa158015610eed573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f119190611df6565b6001600160a01b0385165f90815260066020526040902054909150610f369082611254565b6001600160a01b038086165f908152600660205260408082209390935590871681522054610f649082611249565b6001600160a01b038087165f818152600660205260408082209490945592519187169290917f4853ae1b4d437c4255ac16cd3ceda3465975023f27cb141584cd9d44440fed829190a35050505050565b5f610493610fc061125f565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f80610fee8686611388565b925092509250610ffe82826113d1565b5090949350505050565b6001600160a01b038281165f9081526007602090815260408083209385168352929052908120541561105f57506001600160a01b038083165f90815260076020908152604080832093851683529290522054610493565b6110685f6110d8565b9050610493565b60606103a5838361148d565b606083156110945761108d848461148d565b90506103a5565b61108d6110aa8367ffffffffffffffff166110d8565b8461148d565b5f826110c2576110bf5f6110d8565b92505b6103a5838367ffffffffffffffff1660016114f8565b5f61049382600561158e565b5f610bfd848484611603565b6002546001600160a01b03163314610a0d5760405163118cdaa760e01b815233600482015260240161061a565b6003805473ffffffffffffffffffffffffffffffffffffffff19169055610a5081611638565b6060610b037f00000000000000000000000000000000000000000000000000000000000000005f611696565b6060610b037f00000000000000000000000000000000000000000000000000000000000000006001611696565b5f826111ae576111ab5f6110d8565b92505b816111bf576111bc5f6110d8565b91505b6103a583835f611738565b5f826111dc576111d95f6110d8565b92505b6103a5838367ffffffffffffffff16600161178a565b5f80838360f81b60405160200161120a929190611fe0565b60408051601f1981840301815290829052630964a5d960e31b82529150605d90634b252ec890610bbe908490600401611ae9565b5f6103a583836117dc565b5f6103a58383611813565b5f6103a58383611841565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156112b757507f000000000000000000000000000000000000000000000000000000000000000046145b156112e157507f000000000000000000000000000000000000000000000000000000000000000090565b610b03604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f805f83516041036113bf576020840151604085015160608601515f1a6113b18882858561186f565b9550955095505050506113ca565b505081515f91506002905b9250925092565b5f8260038111156113e4576113e461200e565b036113ed575050565b60018260038111156114015761140161200e565b0361141f5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114335761143361200e565b036114545760405163fce698f760e01b81526004810182905260240161061a565b60038260038111156114685761146861200e565b03611489576040516335e2f38360e21b81526004810182905260240161061a565b5050565b60405163d6ad57cd60e01b81526004810183905260248101829052606090605d9063d6ad57cd906044015f60405180830381865afa1580156114d1573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526103a59190810190612022565b5f80821561150b5750600160f81b61150e565b505f5b604051630d7c62eb60e31b815260048101869052602481018590526001600160f81b031982166044820152605d90636be31758906064015b602060405180830381865afa158015611561573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115859190611df6565b95945050505050565b604051631ce2e8d760e31b8152600481018390526001600160f81b031960f883901b1660248201525f90605d9063e71746b890604401602060405180830381865afa1580156115df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a59190611df6565b60405163cb3b940760e01b81526004810184905260248101839052604481018290525f90605d9063cb3b940790606401610bbe565b600280546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b606060ff83146116a95761106883611937565b8180546116b590611da3565b80601f01602080910402602001604051908101604052809291908181526020018280546116e190611da3565b801561172c5780601f106117035761010080835404028352916020019161172c565b820191905f5260205f20905b81548152906001019060200180831161170f57829003601f168201915b50505050509050610493565b5f80821561174b5750600160f81b61174e565b505f5b6040516334a6d7b960e11b815260048101869052602481018590526001600160f81b031982166044820152605d9063694daf7290606401611546565b5f80821561179d5750600160f81b6117a0565b505f5b60405163f953e42760e01b815260048101869052602481018590526001600160f81b031982166044820152605d9063f953e42790606401611546565b604051630ccd46b160e31b815260048101839052602481018290525f60448201819052908190605d9063666a358890606401610bbe565b5f82611825576118225f6110d8565b92505b81611836576118335f6110d8565b91505b6103a583835f611974565b5f82611853576118505f6110d8565b92505b81611864576118615f6110d8565b91505b6103a583835f61178a565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156118a857505f9150600390508261192d565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156118f9573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b03811661192457505f92506001915082905061192d565b92505f91508190505b9450945094915050565b60605f611943836119c6565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f8082156119875750600160f81b61198a565b505f5b604051638c14cc2160e01b815260048101869052602481018590526001600160f81b031982166044820152605d90638c14cc2190606401611546565b5f60ff8216601f81111561049357604051632cd44ac360e21b815260040160405180910390fd5b80356001600160a01b0381168114611a03575f80fd5b919050565b5f8083601f840112611a18575f80fd5b50813567ffffffffffffffff811115611a2f575f80fd5b602083019150836020828501011115611a46575f80fd5b9250929050565b5f805f60408486031215611a5f575f80fd5b611a68846119ed565b9250602084013567ffffffffffffffff811115611a83575f80fd5b611a8f86828701611a08565b9497909650939450505050565b5f5b83811015611ab6578181015183820152602001611a9e565b50505f910152565b5f8151808452611ad5816020860160208601611a9c565b601f01601f19169290920160200192915050565b602081525f6103a56020830184611abe565b5f8060408385031215611b0c575f80fd5b611b15836119ed565b946020939093013593505050565b5f805f60608486031215611b35575f80fd5b611b3e846119ed565b9250611b4c602085016119ed565b9150604084013590509250925092565b5f805f805f60808688031215611b70575f80fd5b611b79866119ed565b9450611b87602087016119ed565b935060408601359250606086013567ffffffffffffffff811115611ba9575f80fd5b611bb588828901611a08565b969995985093965092949392505050565b5f805f8060608587031215611bd9575f80fd5b611be2856119ed565b9350611bf0602086016119ed565b9250604085013567ffffffffffffffff811115611c0b575f80fd5b611c1787828801611a08565b95989497509550505050565b5f805f8060608587031215611c36575f80fd5b611c3f856119ed565b935060208501359250604085013567ffffffffffffffff811115611c0b575f80fd5b60ff60f81b881681525f602060e06020840152611c8160e084018a611abe565b8381036040850152611c93818a611abe565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b81811015611ce657835183529284019291840191600101611cca565b50909c9b505050505050505050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b82811015611d4d57603f19888603018452611d3b858351611abe565b94509285019290850190600101611d1f565b5092979650505050505050565b5f60208284031215611d6a575f80fd5b6103a5826119ed565b67ffffffffffffffff81168114610a50575f80fd5b5f60208284031215611d98575f80fd5b81356103a581611d73565b600181811c90821680611db757607f821691505b602082108103611dd557634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215611deb575f80fd5b81516103a581611d73565b5f60208284031215611e06575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611e4a57611e4a611e0d565b604052919050565b5f67ffffffffffffffff831115611e6b57611e6b611e0d565b611e7e601f8401601f1916602001611e21565b9050828152838383011115611e91575f80fd5b6103a5836020830184611a9c565b5f6020808385031215611eb0575f80fd5b825167ffffffffffffffff80821115611ec7575f80fd5b818501915085601f830112611eda575f80fd5b815181811115611eec57611eec611e0d565b8060051b611efb858201611e21565b9182528381018501918581019089841115611f14575f80fd5b86860192505b83831015611f6157825185811115611f30575f80fd5b8601603f81018b13611f40575f80fd5b611f518b8983015160408401611e52565b8352509186019190860190611f1a565b9998505050505050505050565b6001600160a01b038416815260406020820152816040820152818360608301375f818301606090810191909152601f909201601f1916010192915050565b67ffffffffffffffff818116838216019080821115611fd957634e487b7160e01b5f52601160045260245ffd5b5092915050565b5f8351611ff1818460208801611a9c565b6001600160f81b0319939093169190920190815260010192915050565b634e487b7160e01b5f52602160045260245ffd5b5f60208284031215612032575f80fd5b815167ffffffffffffffff811115612048575f80fd5b8201601f81018413612058575f80fd5b610bfd84825160208401611e5256fea164736f6c6343000816000a";

type CompliantERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompliantERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompliantERC20__factory extends ContractFactory {
  constructor(...args: CompliantERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _identityAddr: AddressLike,
    _rulesAddr: AddressLike,
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _identityAddr,
      _rulesAddr,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override deploy(
    _identityAddr: AddressLike,
    _rulesAddr: AddressLike,
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _identityAddr,
      _rulesAddr,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<
      CompliantERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CompliantERC20__factory {
    return super.connect(runner) as CompliantERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompliantERC20Interface {
    return new Interface(_abi) as CompliantERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CompliantERC20 {
    return new Contract(address, _abi, runner) as unknown as CompliantERC20;
  }
}
